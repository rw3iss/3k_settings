#class {player_aliases} {kill}
#class {player_aliases} {open}

#alias corpse_trig {
  cast spell tap on corpse;
  slab;
  wrap;
  cast corpse blast;
  get coins;
  get fragment;
  get essence;
  get heart;
  stash all;
  fuse 50;
  #var mob_slow 0;
  #var mob_drain 0;
  #var mob_atrophy 0;
  study spellbook;
};

#alias summon_str {
     #loop 1 13 i {c giant strength on $summon_string $i};
     c giant strength golem;
     c giant strength oscar;
     c giant strength giant;
};

#alias summon_buff {
     cast haste on summons;
}

#alias {_player_deadmanActions} {
    .pause;
};

#alias {setup_c} {
     cast contingency as prot_evil#cast protection from evil;
}

#alias {setup_gc} {
     cast greater contingency as stoneskin#cast stoneskin;
     cast greater contingency as major globe#cast major globe;     
     cast greater contingency as shield#cast magnificent shield;
     cast greater contingency as armor#cast armor;
     cast greater contingency as mantle#200#cast mantle;
     cast greater contingency as prismatic sphere#200#cast prismatic sphere;
}

#alias {clear_c} {
     #6 {cast remove contingency as 1};
}

#alias {clear_gc} {
     #7 {cast remove greater contingency as 1};
}

#alias ms7 {
     #var summoner 1;
     cast monster summoning 7 as $summon_string;
};

#alias {check_beads} {
     #math hp_overmax_max {$my[hp][max] * 5};
     #math hp_overmax_shortfall {$hp_overmax_max - $my[hp][current]};
     #math grasps_needed {$hp_overmax_shortfall / 33};

     #math sp_threshold {$my[sp][max] * .20};
     #math sp_extra {$my[sp][current] - $sp_threshold};
     #math grasps_possible {$sp_extra / 100};

     #if {$grasps_needed < $grasps_possible} {
          #var grasp_beads $grasps_needed;
     } {
          #var grasp_beads $grasps_possible;
     };

     #$grasp_beads {grasp beads};
}

#ALIAS {ld}
{
     #class global open;
     #map get roomvnum curvnum;
     #variable shield $shield;
     #variable wielded $wielded;
     #class global close;
     #class global write chars/$user/vars.tin;
     #delay 1 {#end}
};


#NOP ---MISC
#alias {bag_all %1} {#loop 1 %1 i {put all in bag $i}};

#class {player_aliases} {close}