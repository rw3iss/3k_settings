#class {miphp} {open}

#TICKER {idle} {
        #math {idle} {$idle + 1};
        update_status
} {1}

#alias {update_status} {

	#math   {idle_hr}       {$idle / 3600};
	#math   {idle_min}      {$idle % 3600 / 60};
	#math   {idle_sec}      {$idle % 60};
	#if     {$idle_hr < 10} {#var idle_hr  0$idle_hr};
	#if     {$idle_min < 10}{#var idle_min 0$idle_min};
	#if     {$idle_sec < 10}{#var idle_sec 0$idle_sec};
	#format {idle_cap}      {%+4s}  {<268>[<128>$idle_hr<268>:<128>$idle_min<268>:<128>$idle_sec<268>]<088>};

	#var	{my[hp][graph]}		{@graph{$my[hp][current];${my[hp][max]}}};
	#var	{my[sp][graph]}		{@graph{$my[sp][current];$my[sp][max]}};
	#var	{my[gp1][graph]}	{@graph{$my[gp1][current];$my[gp1][max]}};
	#var	{my[gp2][graph]}	{@graph{$my[gp2][current];$my[gp2][max]}};
	#var	{enemy[graph]}		{@graph{$enemy[hp];100}};
	#format {hp}			{%+4s} {$my[hp][current]};
	#format {hp_max}		{%+4s} {$my[hp][max]};
	#format {sp}			{%+4s} {$my[sp][current]};
	#format {sp_max}		{%+4s} {$my[sp][max]};
	#format {gp1}			{%+4s} {$my[gp1][current]};
	#format {gp1_max}		{%+4s} {$my[gp1][max]};
	#format {gp2}			{%+4s} {$my[gp2][current]};
	#format {gp2_max}		{%+4s} {$my[gp2][max]};
	#format {ehealth}		{%+7s} {$enemy[hp]%%};

	#if {$ewell} {#format {ewell_string} {<128>EWELL<088>}} {#format {ewell_string} {<070>EWELL<088>}};

	#math corpses[total] {$corpses[coffin] + $corpses[inventory] + $corpses[smuggle] + $corpses[freezer]};

	#var etc_string {Corpses: $corpses[total] (C: $corpses[coffin] I: $corpses[inventory] S: $corpses[smuggle] F: $corpses[freezer])};
	#var eternal_string {Eternal Pwr: $ewell_string };

	#showme {HP:$hp/$hp_max SP:$sp/$sp_max NP:$gp1/$gp1_max  E:$ehealth} {-5};
	#showme {H:$my[hp][graph] S:$my[sp][graph] Karma:$my[gp1][graph] Voice:$my[gp2][graph] E:$enemy[graph]} {-4};
	#showme {$etc_string} {-3};
	#showme {$eternal_string Idle: $idle_cap} {-2};

	_player_heartbeat;
    
	draw_hpbar;
}

#if {"$draw[hpbar]" == "on"} {
	#var hpbar[enabledheight] $hpbar[height];
} {
	#var hpbar[enabledheight] 0;
}
    
/* calculate hpbar size and draws initial line above hpbar area */
#alias {init_hpbar} {
    
    #if {"$draw[hpbar]" == "on"} {
        #var hpbar[enabledheight] $hpbar[height];
    } {
        #var hpbar[enabledheight] 0;
    }

    #math hpbar[top] {$screen[height] - $hpbar[enabledheight]};
    #math hpbar[bottom] {$hpbar[top] + $hpbar[height] - 1};
    #math hpbar[right] {$hpbar[left] + $screen[width]}; 

    #if {"$draw[hpbar]" == "on"} {
    #draw {line} -$hpbar[enabledheight]-2 1 -$hpbar[enabledheight]-2 -1;
    }

    tickhp;
};

#alias {draw_hpbar} {
    #if {"$draw[hpbar]" == "on"} {
        #var hpStr {<088>H:$my[hp][graph] S:$my[sp][graph] G:$my[gp1][graph] G2:$my[gp2][graph] E:$enemy[graph]};

        #nop TODO: add jousts, gxp/hr, avg dmg, xp/hr stats...;

        #draw {<dda>} {tile} $hpbar[top] $hpbar[left] $hpbar[bottom] -1 {${hpStr}\n${prompt2}\n${prompt3} };
    }
}

#alias {tickhp} {
    #TICKER {update_status} {
            #math {idle} {$idle + 1};
            update_status;
    } {1}
}

#class {miphp} {close}
