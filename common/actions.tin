#class {default_actions} {kill}
#class {default_actions} {open}

#action {^You lift the drink to your mouth, but in your stomach} {#var my[drunk] 1};
#action {^You drink the wine and feel healed.$} {#var my[drunk] 0};

#act {The effects of the%*blue capsule fade away.}{#if !$idle_flag {eat blue};};
#act {The effects of the%*orange capsule fade away.}{#if !$idle_flag {eat orange};};

#action {^The daemon hisses: Dost thou choose to graft with me %w?} {#format {graft} {%l} {%1};#if {"$user" == "$graft"} {say yes}};
#action {^%1 begins to follow %2\.$} {#format {follower} {%l} {%1};#if {"$user" == "$follower"} {#format {following} {%n} {%2}}};
#action {^You stop following %1} {#unvar following};
#action {^%1 leaves %2\.$} {
    #if {"%1" == "$following"} {
        #format {follow_target} {%l} {%1};
        #local follow_dir %2;
        #switch {"$follow_dir"} {
            #case {"north"}     {#map move n};
            #case {"northeast"} {#map move ne};
            #case {"northwest"} {#map move nw};
            #case {"south"}     {#map move s};
            #case {"southeast"} {#map move se};
            #case {"southwest"} {#map move sw};
            #case {"east"}      {#map move e};
            #case {"west"}      {#map move w};
            #case {"down"}      {#map move d};
            #case {"up"}        {#map move u};
            #default            {#map move $follow_dir};
        };
    }
}; 


#act {{(\w+) taps you on the shoulder\.}} { 
    #if !$idle_flag {
        #format followtarget {%l} {%2}; 
        follow $followtarget;
        cassist $followtarget;
    };
};

#act {{From afar, (\w+) stares at you in (\w+) Jesus Christ pose\.}} {
    #if !$idle_flag {
        #format healtarget {%l} {%2}; 
        hmheal $healtarget;
    };
};

#act {{(\w+) stares at you in (\w+) Jesus Christ pose\.}} { 
    #if !$idle_flag {
        #format healtarget {%l} {%2}; 
        hmheal $healtarget;
    };
};

#act {{(\w+) says, 'Greetings, Comrade!' to you.$}} { 
    #if !$idle_flag {
        #10 corpse_select
    };
};

#NOP -- 3kdb reporting stuff;
#act {~\e[33;1m[PARTY]\e[0m %w: 3kdb %w corpses} {
    #if {"%2" == "bot"} {
        #if {!$idle_flag && $bot[active]} {#delay .2 {ptell $corpse_string};};
    };
    #if {"%2" == "$user"} {
        #if {!$idle_flag} {#delay .2 {ptell $corpse_string};};
    };
} {1};

#NOP -- ROOM VNUM REPORTING;
#act {~\e[33;1m[PARTY]\e[0m %w: 3kdb %w vnum} {
    #if {"%2" == "$user" && !$idle_flag} {
        #map get roomvnum temp_vnum;
        ptell My current vnum is $temp_vnum;
    };
};

#NOP -- Bot XP Reporting;
#act {~\e[33;1m[PARTY]\e[0m %w: 3kdb bot xp} {
    #format {bot[report-time]} {%T} {};
    #math bot[delta-time] {$bot[report-time] - $bot[start-time]};
    #if {$bot[delta-time] > 3600} {
        #math bot[delta-time] {$bot[delta-time] / 3600 * 1.00};
        #math bot[delta-rate] {$bot[stats][xp] / $bot[delta-time]};
        thousandsFormatNumber bot[delta-rate];
        #var xp_rate_str $bot[delta-rate] ($bot[delta-time] Hrs);
    } {
        #math bot[delta-time] {$bot[delta-time] / 60 * 1.00};
        #math bot[delta-rate] {$bot[stats][xp] * 60 / $bot[delta-time]};
        thousandsFormatNumber bot[delta-rate];
        #var xp_rate_str $bot[delta-rate] ($bot[delta-time] mins);
    };
    #if {!$idle_flag && $bot[active]} {
        #var temp_xp $bot[stats][xp];
        thousandsFormatNumber temp_xp;
        ptell Mobs Killed: $bot[stats][mobs]  XP Gained: $temp_xp  XP Rate/Hr: $xp_rate_str;
    };
};

#NOP -- CORPSE SHARING AND REPORTING;
#var gimme_corpses 1;
#act {~\e[33;1m[PARTY]\e[0m %w: 3kdb %w corpses %w} {
    #if {"%2" == "$user"} {
        #if {!$idle_flag && $gimme_corpses} { 
            #if {"%3" == "gimme-coffin"} {
                #var gimme_corpses 0;
                ptell Attempting to unwrap 10 corpses;
                #10 unwrap;
                #delay .1 {i};
                #delay 4 {#var gimme_corpses 1};
            };
            #if {"%3" == "gimme-freezer"} {
                #var gimme_corpses 0;
                ptell Attempting to deslab 10 corpses;
                #10 deslab;
                #delay .1 {i};
                #delay 4 {#var gimme_corpses 1};
            };
            #if {"%3" == "gimme-cooler"} {
                #var gimme_corpses 0;
                ptell Attempting to uncooler 10 corpses;
                #10 uncooler corpse;
                #delay .1 {examine cooler};
                #delay 4 {#var gimme_corpses 1};
            };
        };
    };
    #if {"%2" == "bot"} {
        #if {!$idle_flag && $bot[active] && $gimme_corpses} {
            #if {"%3" == "gimme-coffin"} {
                #var gimme_corpses 0;
                ptell Attempting to unwrap 10 corpses;
                #10 unwrap;
                #delay .1 {i};
                #delay 4 {#var gimme_corpses 1};
            };
            #if {"%3" == "gimme-freezer"} {
                #var gimme_corpses 0;
                ptell Attempting to deslab 10 corpses;
                #10 deslab;
                #delay .1 {i};
                #delay 4 {#var gimme_corpses 1};
            };
            #if {"%3" == "gimme-cooler"} {
                #var gimme_corpses 0;
                ptell Attempting to uncooler 10 corpses;
                #10 uncooler corpse;
                #delay .1 {examine cooler};
                #delay 4 {#var gimme_corpses 1};
            };
        };
    };
} {1};

#act {~\e[33;1m[PARTY]\e[0m %w: 3kdb bot status} {
    #if {!$idle_flag && $bot[active]} {#delay .2 {ptell Bot Status : $bot_current_room/$bot_total_rooms ($bot_progress%)};};
} {1};

#act {~\e[33;1m[PARTY]\e[0m %w: 3kdb bot path-find} {
    #if {!$idle_flag && $bot[active]} {
        #unvar tempPath;
        #unvar botPath;
        #path get position position;
        #math position {$position - 1};
        #path save forward tempPath;
        #list tempPath create {$tempPath};
        #var botPath {Path to find me is: };
        #foreach {$tempPath[+1..$position]} {dir} {#cat botPath {$dir;}};
        #delay .2 {ptell ${botPath}};
    };
} {1};

#act {~\e[33;1m[PARTY]\e[0m %w: 3kdb bot help} {
    #if {!$idle_flag && $bot[active]} {
        #delay .2 {
            ptell ---------------------------------------------------;
            ptell -----            3kdb Bot Helpers             -----;
            ptell -----                                         -----;
            ptell -----         xp: XP Report (Are we winning?) -----;
            ptell -----     status: Current Room & Progress     -----;
            ptell -----  path-find: Directions to find leader   -----;
            ptell -----  corpses: Report corpse count           -----;
            ptell -----     Add "gimme-x" to attempt to         -----;
            ptell -----     deliver 10 corpses, such as:        -----;
            ptell -----     corpses gimme-coffin                -----;
            ptell -----     corpses gimme-freezer               -----;
            ptell -----     corpses gimme-cooler                -----;
            ptell -----                                         -----;
            ptell ---------------------------------------------------;
        };
    };
} {1};

#NOP -- Skill Training;
#act {^To do so, type: tskill %1$} {tskill %1};


#NOP -- Mob Life Counting;
#act {^Beloch falters slightly but shakes off the assault.} {
    #showme -------------------------------------------------;
    #showme ---------        BELOCH LIFE DOWN         -------;
    #showme -------------------------------------------------;
};

#class {default_actions} {close}