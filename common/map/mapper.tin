#class {mapper} {open}



#map read common/map/3k_shared.map;
#map goto 1;
#map goto $curvnum;

#map flag static on;
#unvar mapstatic;

#alias {oldmap} {
    #map read common/map/3k_map.tin;
}


#nop empty alias, does nothing here, drawmap.tin will override if loaded;
#alias {mapupdate_draw} { #nop; };

/* Move Event */
#alias {mapupdate} {
	#map {get} {ROOMVNUM} {roomvnum};
	#map {get} {ROOMAREA} {roomarea};
	#map {get} {ROOMNAME} {roomname};
	#map {get} {ROOMDESC} {roomdesc};
	#format {roomname_len}	{%L} {$roomname};
	#format {roomvnum_len}	{%L} {$roomvnum};
	#format {roomarea_len}	{%L} {$roomarea};
	#format {roomdesc_len}	{%L} {$roomdesc};
	#math {name_len} {42-$roomvnum_len};
	#format {name_trunc} {%.${name_len}s} {$roomname};
	#unvar area_mapped;
	#map list {} {} {} {$roomarea} {variable} {area_mapped};
	#var {room_cnt} {&area_mapped[]};
	mapupdate_draw;
};

#event {MAP UPDATED VTMAP} {
	#delay {0.05} {mapupdate}
}

#event {MAP ENTER ROOM} {
	#if {"$mapping" == "on"} {
		mapupdate
	}
}

#event {MAP EXIT ROOM} {
	#list nouns clear;
}

#alias {go} {
        #map find {roomname} {%0%*};
        #nop #map find {roomnote} {%0%*};
        #path run;
};

/* Map Follow on Following Others */
#act {%1 leaves %2\.} {
	#var following %1;
	#var foldir %2;

	#switch {"$foldir"} {
		#case {"north"}	{#var foldir n};
		#case {"south"}	{#var foldir s};
		#case {"east"}	{#var foldir e};
		#case {"west"}	{#var foldir w};
		#case {"down"}	{#var foldir d};
		#case {"up"}	{#var foldir u};
	}
}

#act {%1 leaves following %2} {
	#format {follower} {%l} {%1};
	#if {"$follower" == "$world" && %2 == "$following"} {
		#map move $foldir
	}
} {4}

/* Data Grab Trigger */
#var longcap off;

#alias {mapsave} {#map write common/map/3k_shared.map force;}
#alias {mapon} {
	!brief off yes;
	#map flag static off;
	#var mapstatic 1;
	#var area %1;
	#var mapping on;
}
#alias {mapoff} {
	!brief on yes;
	#map flag static on;
	#unvar mapstatic;
	#unvar mapping;
}

#NOP Search Room Nouns (built by MIP)
#alias {sn} {
	#var noun_cnt &nouns[];
	#loop 1 &nouns[] cnt {
		exa $nouns[$cnt];
		search $nouns[$cnt]
	};
	#delay 0.5 {
		#if {$noun_cnt < &nouns[]} {
			#echo {<128>New items found!  Search again!<088>}
		}
	}
}

#class {mapper} {close}
