#CLASS draw {open}

/* draw[] variables need to be set in player's vars.tin:
#VARIABLE {draw} {
    {canvas}{on}
    {caption}{on}
    {chat}{on}
    {gline}{on}
    {map}{on}
	{hpbar}{on}
    {room}{on}
}
*/

/* Calculate various area dimensions, called on start and SCREEN RESIZE */

#alias init_screen {
    #screen get 	rows 	screen[height];
    #screen get 	cols 	screen[width];

    #format map[width] {%d} {$map[widthperc] * $screen[width]};
    #format map[height] {%d} {$map[heightperc] * $screen[height]};

    #format room[width] {%d} {$room[widthperc] * $screen[width]};
    #format room[height] {%d} {$room[heightperc] * $screen[height]};
    #math room[top] {$screen[height] - $room[height]};
    #math room[bottom] {$screen[height] - $hpbar[height] - 1};
        
    #if {"$draw[canvas]" == "on"} {
        #format canvas[width] {%d} {$canvas[widthperc] * $screen[width] + 1};
    } {
        #var canvas[width] 0
    }

    #if {"$draw[caption]" == "on"} {
        #var caption[height] 2
    } {
        #var caption[height] 0
    }

    #if {"$draw[chat]" == "on"} {
        #math chat[height] {$chat[rows] + 1};
        #if {"$draw[map]" == "on"} {
            #math {chat[right]} {-$map[width]-2}
        } { 
            #var chat[right] -1
        }
        
        #draw {green} {line} $chat[height] 1 $chat[height] -1;
    } {
        #var chat[height] 0
    }
    
    #if {"$draw[gline]" == "on"} {
        #var gline[height] 2
    } {
        #var gline[height] 0
    }

    #nop Clear any previous drawings;
    #screen clear split;
    #buffer end;

    #math status[height] { $hpbar[height] + 1}; 

    #nop Split bottom area for hp+guild/stats bar;
    #math 	split[top]		{$chat[height] + $caption[height]};
    #var 	split[bottom]	$status[height];
    #var    split[left]     0;
    #var 	split[right]	$canvas[width];
    #split 	$split[top] $split[bottom] $split[left] $split[right];
    #nop show split: $split[top] $split[bottom] $split[left] $split[right];

    init_map;
    init_hpbar;
}


#alias draw_all {
    #if {"$draw[chat]" == "on"} { draw_chat };
    #if {"$draw[map]" == "on"} { draw_map };
    #if {"$draw[room]" == "on"} { draw_room };
    #if {"$draw[hpbar]" == "on"} { draw_hpbar };
    #if {"$draw[caption]" == "on"} { draw_caption };
}


/* -- CAPTION (Idle timer, uptime, etc) -- */
#alias draw_caption {
    #format {uptimeStr}	{%+8s}	{$session[uptime]};
    #format {rebootStr}	{%+5s}	{$session[reboot]};
    #format {lagStr}	{%+4s}	{$session[lag]};
    #math	{idle_hr}	{$idle / 3600};
    #math	{idle_min}	{$idle % 3600 / 60};
    #math	{idle_sec}	{$idle % 60};
    #if	{$idle_hr < 10}	{#var idle_hr  0$idle_hr};
    #if	{$idle_min < 10} {#var idle_min 0$idle_min};
    #if	{$idle_sec < 10} {#var idle_sec 0$idle_sec};
    #format {idleStr}	{%+4s}	{<268>[<128>$idle_hr<268>:<128>$idle_min<268>:<128>$idle_sec<268>]<088>};
    
    #var statStr {I:${idleStr}  R:[${rebootStr}]  U:[${uptimeStr}] };

    #draw {<dda>} {tile} 1 $hpbar[left] $hpbar[bottom] -1 {${hpStr}\n${prompt2}\n${prompt3} };
}

/* -- CHAT LOGS -- */
#alias draw_chat {
    #nop todo...;
    chatend;
}

/* -- MAP -- */
#alias init_map {
    #if {"$draw[map]" == "on"} {
        #draw line $map[height] -$map[width]-1 $map[height] -1;
        #map offset 1 -$map[width] $map[height]-1 -1;
        #map flag vtmap on;
        draw_map;
    } {
        #map flag vtmap off
    };
}

#nop See mapupdate in mapper.tin for map draw code;
#alias draw_map {
    #nop draw {tile} $map[height]-1 -$map[width] $map[height]-1 -1 {<020>$roomarea <140>(<120>$room_cnt<140>)<099>};
    #nop draw {tile} 1 -$map[width] 1 -1 {<140>[<030>$roomvnum<140>] <130>$name_trunc<099>}
}

/* -- ROOM -- */
#alias draw_room {
    #var _lbl <cba>;

    #var nounStr {};
    #foreach {*nouns[%*]} {idx} {
        #var noun $nouns[$idx];
        #var nounStr {$nounStr$noun };
    };
    
    #var roomNameStr {<fff>${room[name]}<088>};
    #var nounStr {<ade>${nounStr}<088>};
    
    #draw {tile} $room[top] -$room[width]+1 $room[top]+1 -1 {<ffa>Room:<088>};

    #nop NOTES from mapper:;
    #map get roomname roomMapNameStr;
    #map get roomnote roomMapNoteStr;
    
    #format roomStr {%s\n%s\n%s\n\n%s\n%s\n%s} 
        {${_lbl}MIP name: <ffa>$roomNameStr<099>} 
        {${_lbl}MIP nouns: ${nounStr}} 
        {${_lbl}MIP exits:<088> <afe>${exitStr}<088>} 
        {${_lbl}Map vnum:<088> $roomvnum} 
        {${_lbl}Map name:<088> $roomMapNameStr} 
        {${_lbl}Map notes:<088> $roomMapNoteStr};

    #draw {<dda>} {tile} $room[top]+1 -$room[width]+1 $room[bottom]-2 -1 {$roomStr};
}


#NOP NOT USED???;
#alias redraw {
	#var redraw[args][1] valid;
	#var redraw[args][2] val`id;
	#if {"%1" != ""} {
		#switch {"%1"} {
			#case {"canvas"}	{#var redraw[option] %1};
			#case {"caption"}	{#var redraw[option] %1};
			#case {"chat"}		{#var redraw[option] %1};
			#case {"gline"}		{#var redraw[option] %1};
			#case {"hpbar"}		{#var redraw[option] %1};
			#case {"map"}		{#var redraw[option] %1};
			#default			{#var redraw[args][1] invalid;#showme REDRAW:  Invalid redraw option}
		};
		#if {"%2" != ""} {
			#switch{"%2"} {
				#case {"on"}	{#var redraw[flag] on};
				#case {"off"}	{#var redraw[flag] off};
				#default		{#var redraw[args][2] invalid;#showme REDRAW:  Invalid redraw parameter (on or off)}
			}
		} {
			#if {"$draw[$redraw[option]]" == "on"} {
				#var redraw[flag] off
			} {
				#var redraw[flag] on
			}
		};
		#if {"$redraw[args][1]" == "valid" && "$redraw[args][2]" == "valid"} {
			#var draw[$redraw[option]] $redraw[flag];
		}
	} {
	}
}

#EVENT {SCREEN RESIZE}
{
    init_screen;
    draw_all;
}

/* kick off */
init_screen;
draw_all;

#CLASS draw {close}