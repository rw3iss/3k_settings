#class {transmuter} {kill}
#class {transmuter} {open}

#NOP -----------------------------------------------------------;
#NOP -----------------------------------------------------------;
#NOP -----           Oscar's Deluxe Transmuter            ------;
#NOP -----------------------------------------------------------;
#NOP -----------------------------------------------------------;

#NOP        syntax example: transmute_burn consolidate;

#NOP        Valid parameters include:;
#NOP        consolidate           -Consolidate satchel until Superior (not guaranteed pxp);
#NOP        consolidate-leg       -Consolidate satchel until Legendary (not guaranteed pxp);

#NOP        train                 -Consolidate components until Superior (that provide pxp);
#NOP        train-leg             -Consolidate components until Legendary (that provide pxp);


#var transmuter[uses] 0;
#action {Profession #1 : Transmuter%s\(Level %d\)%s\[%*\]} {#var transmuter[level] %2};

#action {%1%s\|%s%2%s\|%s%3%s\|%s%4%s\|%s%5%s\|%s%6%s\|%s%7%s\|%s%8%s\|%s%9%s\|} {
    #format {lower} {%l} {%1};
    #format {satchel_total} {%p} {%2};
    #format {satchel_legendary} {%p} {%3};
    #format {satchel_superior} {%p} {%4};
    #format {satchel_good} {%p} {%5};
    #format {satchel_average} {%p} {%6};
    #format {satchel_poor} {%p} {%7};
    #format {satchel_crude} {%p} {%8};
    #format {satchel_worthless} {%p} {%9};
    
    #list temp_satchel add {{
        {name} {$lower}
        {total} {$satchel_total}
        {legendary} {$satchel_legendary}
        {superior} {$satchel_superior}
        {good} {$satchel_good}
        {average} {$satchel_average}
        {poor} {$satchel_poor}
        {crude} {$satchel_crude}
        {worthless} {$satchel_worthless}
    }};
};

#alias update_satchel {
    #list temp_satchel clear;
    #send {stashlist};
    #delay 1 {#var craft[satchel] $temp_satchel;};
};

#alias satchel_retrieve_xmute {
    #var items_required %1;
    #var item_quality %2;
    #var item %3;
    #var items_available %4;
    
    #math items_required {$items_required * 1};
    #math sets_available {$items_available / $items_required};

    #if {$sets_available >= 1} {
        #loop 1 $sets_available index {
            #if {"$item_quality" == "worthless"} {
                #2 {unstash $item_quality $item};
                transmute 2 $item quality to average;
            };
            #if {"$item_quality" == "crude"} {
                #2 {unstash $item_quality $item};
                transmute 2 $item quality to average;
            };
            #if {"$item_quality" == "poor"} {
                #2 {unstash $item_quality $item};
                transmute 2 $item quality to average;
            };
            #if {"$item_quality" == "average"} {
                #2 {unstash $item_quality $item};
                transmute 2 $item quality to good;
            };
            #if {"$item_quality" == "good"} {
                #3 {unstash $item_quality $item};
                transmute 3 $item quality to superior;
            };
            #if {"$item_quality" == "superior"} {
                #4 {unstash $item_quality $item};
                transmute 4 $item quality to legendary;
            };
        };
    };
};


#alias transmute_burn {
    #var transmute_count 0;
    #action {Pfffzzzt!  You transmute:} {#math transmute_count {$transmute_count + 1}};

    #delay 2 {
        #if {"%1" == ""} {
            #showme {<ddd>    No parameters were provided, please provide a valid parameter such as:  <088>};
            #showme {<ddd>     transmute_burn consolidate  <088>};
            #showme {                                                                                         };
            #showme {<ddd>     Valid parameters include:                                                  <088>  };
            #showme {<ccf>       consolidate      <ddd>-Consolidate satchel until Superior (not guaranteed pxp)          <088>  };
            #showme {<ccf>       consolidate-leg  <ddd>-Consolidate satchel until Legendary (not guaranteed pxp)          <088>  };

            #showme {<ccf>       train          <ddd>-Consolidate components until Superior (that provide pxp)     <088>  };
            #showme {<ccf>       train-leg      <ddd>-Consolidate components until Legendary (that provide pxp)     <088>  };
        } {
            #send profs;
            #showme {<ccf>  -------------------------------------------    <088>  };
            #showme {<ccf>  -------    TRANSMUTING MATERIALS    -------    <088>  };
            #showme {<ccf>  -------------------------------------------    <088>  };
            update_satchel;
            #delay 4 {
                #switch {"%1"} {
                    #case {"consolidate"} {
                        #foreach $transmuter[data][%*] index {
                            #if {$transmuter[level] >= $index[min-level]} {
                                #foreach $craft[satchel][%*] satchel_item {
                                    #if {"$satchel_item[name]" == "$index[component]" && $satchel_item[total] > 0} {
                                        #if {$satchel_item[worthless] >= 2} {satchel_retrieve_xmute 2 worthless {$satchel_item[name]} $satchel_item[worthless];};
                                        #if {$satchel_item[crude] >= 2} {satchel_retrieve_xmute 2 crude {$satchel_item[name]} $satchel_item[crude];};
                                        #if {$satchel_item[poor] >= 2} {satchel_retrieve_xmute 2 poor {$satchel_item[name]} $satchel_item[poor];};
                                        #if {$satchel_item[average] >= 2} {satchel_retrieve_xmute 2 average {$satchel_item[name]} $satchel_item[average];};
                                        #if {$satchel_item[good] >= 3} {satchel_retrieve_xmute 3 good {$satchel_item[name]} $satchel_item[good];};
                                    };
                                };
                            };
                        };
                        #delay 4 {
                            #showme {<ccf>  -------    YOU TRANSMUTED <faa>$transmute_count MATERIALS    <ccf>-------    <088>  };
                            #unaction {Pfffzzzt!  You transmute:};
                        };
                    };
                    #case {"consolidate-leg"} {
                        #foreach $transmuter[data][%*] index {
                            #if {$transmuter[level] >= $index[min-level]} {                                
                                #foreach $craft[satchel][%*] satchel_item {
                                    #if {"$satchel_item[name]" == "$index[component]" && $satchel_item[total] > 0} {
                                        #if {$satchel_item[worthless] >= 2} {satchel_retrieve_xmute 2 worthless {$satchel_item[name]} $satchel_item[worthless];};
                                        #if {$satchel_item[crude] >= 2} {satchel_retrieve_xmute 2 crude {$satchel_item[name]} $satchel_item[crude];};
                                        #if {$satchel_item[poor] >= 2} {satchel_retrieve_xmute 2 poor {$satchel_item[name]} $satchel_item[poor];};
                                        #if {$satchel_item[average] >= 2} {satchel_retrieve_xmute 2 average {$satchel_item[name]} $satchel_item[average];};
                                        #if {$satchel_item[good] >= 3} {satchel_retrieve_xmute 3 good {$satchel_item[name]} $satchel_item[good];};
                                        #if {$satchel_item[superior] >= 4} {satchel_retrieve_xmute 4 superior {$satchel_item[name]} $satchel_item[superior];};
                                    };
                                };
                            };
                        };
                        #delay 4 {
                            #showme {<ccf>  -------    YOU TRANSMUTED <faa>$transmute_count MATERIALS    <ccf>-------    <088>  };
                            #unaction {Pfffzzzt!  You transmute:};
                        };
                    };
                    #case {"train"} {
                        #foreach $transmuter[data][%*] index {
                            #if {$transmuter[level] >= $index[min-level] && $transmuter[level] <= $index[max-level]} {                                
                                #foreach $craft[satchel][%*] satchel_item {
                                    #if {"$satchel_item[name]" == "$index[component]" && $satchel_item[total] > 0} {
                                        #if {$satchel_item[worthless] >= 2} {satchel_retrieve_xmute 2 worthless {$satchel_item[name]} $satchel_item[worthless];};
                                        #if {$satchel_item[crude] >= 2} {satchel_retrieve_xmute 2 crude {$satchel_item[name]} $satchel_item[crude];};
                                        #if {$satchel_item[poor] >= 2} {satchel_retrieve_xmute 2 poor {$satchel_item[name]} $satchel_item[poor];};
                                        #if {$satchel_item[average] >= 2} {satchel_retrieve_xmute 2 average {$satchel_item[name]} $satchel_item[average];};
                                        #if {$satchel_item[good] >= 3} {satchel_retrieve_xmute 3 good {$satchel_item[name]} $satchel_item[good];};
                                    };
                                };
                            };
                        };
                        #delay 4 {
                            #showme {<ccf>  -------    YOU TRANSMUTED <faa>$transmute_count MATERIALS  <ccf>  -------    <088>  };
                            #unaction {Pfffzzzt!  You transmute:};
                        };
                    };
                    #case {"train-leg"} {
                        #foreach $transmuter[data][%*] index {
                            #if {$transmuter[level] >= $index[min-level] && $transmuter[level] <= $index[max-level]} {                                
                                #foreach $craft[satchel][%*] satchel_item {
                                    #if {"$satchel_item[name]" == "$index[component]" && $satchel_item[total] > 0} {
                                        #if {$satchel_item[worthless] >= 2} {satchel_retrieve_xmute 2 worthless {$satchel_item[name]} $satchel_item[worthless];};
                                        #if {$satchel_item[crude] >= 2} {satchel_retrieve_xmute 2 crude {$satchel_item[name]} $satchel_item[crude];};
                                        #if {$satchel_item[poor] >= 2} {satchel_retrieve_xmute 2 poor {$satchel_item[name]} $satchel_item[poor];};
                                        #if {$satchel_item[average] >= 2} {satchel_retrieve_xmute 2 average {$satchel_item[name]} $satchel_item[average];};
                                        #if {$satchel_item[good] >= 3} {satchel_retrieve_xmute 3 good {$satchel_item[name]} $satchel_item[good];};
                                        #if {$satchel_item[superior] >= 4} {satchel_retrieve_xmute 4 superior {$satchel_item[name]} $satchel_item[superior];};
                                    };
                                };
                            };
                        };
                        #delay 4 {
                            #showme {<ccf>  -------    YOU TRANSMUTED <faa>$transmute_count MATERIALS <ccf>   -------    <088>  };
                            #unaction {Pfffzzzt!  You transmute:};
                        };
                    };
                    #case default {
                        #showme {<ccf>  -------    <faa>No match found, did you mispell %1?         <ccf>  -------    <088>  };
                    };
                }
                stash all;
            };
        };
    };
};

#alias transmute_ug {
    #if {"%1" == "poor"} {
        #2 unstash poor %2;
        transmute 2 %2 quality to average;
        stash all;
    };
    #if {"%1" == "average"} {
        #2 unstash average %2;
        transmute 2 %2 quality to good;
        stash all;
    };
    #if {"%1" == "good"} {
        #3 unstash good %2;
        transmute 3 %2 quality to superior;
        stash all;
    };
    #if {"%1" == "superior"} {
        #4 unstash superior %2;
        transmute 4 %2 quality to legendary;
        stash all;
    };
};

#alias unstash_2 {
    #showme {<ccf>  -------------------------------------------    <088>  };
    #showme {<ccf>  -----   <fff>UNSTASHING Lvl <faa>%1<fff> MATERIALS<ccf>   -----    <088>  };
    #showme {<ccf>  -------------------------------------------    <088>  };
    update_satchel;
    #delay 2 {
        #foreach $transmuter[data][%*] index {
            #if {%1 >= $index[min-level] && %1 <= $index[max-level]} {                                
                #foreach $craft[satchel][%*] satchel_item {
                    #if {"$satchel_item[name]" == "$index[component]" && $satchel_item[total] > 0} {
                        unstash2 all $satchel_item[name];
                    };
                };
            };
        };
    };
}

#list temp clear;
#list temp add {{{min-level} {1}  {max-level} {10} {component} {aquamarine}}};
#list temp add {{{min-level} {1}  {max-level} {10} {component} {aquamarine dust}}};
#list temp add {{{min-level} {1}  {max-level} {10} {component} {copper shards}}};
#list temp add {{{min-level} {1}  {max-level} {10} {component} {morganite}}};
#list temp add {{{min-level} {1}  {max-level} {10} {component} {morganite dust}}};
#list temp add {{{min-level} {1}  {max-level} {10} {component} {tiger's eye}}};
#list temp add {{{min-level} {1}  {max-level} {10} {component} {tiger's eye dust}}};
#list temp add {{{min-level} {2}  {max-level} {12} {component} {fragment of light}}};
#list temp add {{{min-level} {5}  {max-level} {15} {component} {fragment of water}}};
#list temp add {{{min-level} {6}  {max-level} {16} {component} {fragment of shadow}}};
#list temp add {{{min-level} {7}  {max-level} {15} {component} {bronze shards}}};
#list temp add {{{min-level} {7}  {max-level} {15} {component} {cat's eye}}};
#list temp add {{{min-level} {7}  {max-level} {15} {component} {cat's eye dust}}};
#list temp add {{{min-level} {7}  {max-level} {15} {component} {eye of flame}}};
#list temp add {{{min-level} {7}  {max-level} {15} {component} {garnet}}};
#list temp add {{{min-level} {7}  {max-level} {15} {component} {garnet dust}}};
#list temp add {{{min-level} {9}  {max-level} {19} {component} {fragment of might}}};
#list temp add {{{min-level} {10} {max-level} {20} {component} {alexandrite}}};
#list temp add {{{min-level} {10} {max-level} {20} {component} {alexandrite dust}}};
#list temp add {{{min-level} {10} {max-level} {20} {component} {eye of frost}}};
#list temp add {{{min-level} {10} {max-level} {20} {component} {iron shards}}};
#list temp add {{{min-level} {12} {max-level} {22} {component} {fragment of rejuvenation}}};
#list temp add {{{min-level} {13} {max-level} {23} {component} {fragment of rage}}};
#list temp add {{{min-level} {15} {max-level} {25} {component} {fragment of soul}}};
#list temp add {{{min-level} {15} {max-level} {25} {component} {steel shards}}};
#list temp add {{{min-level} {18} {max-level} {28} {component} {fragment of the unseen}}};
#list temp add {{{min-level} {20} {max-level} {30} {component} {beryl}}};
#list temp add {{{min-level} {20} {max-level} {30} {component} {beryl dust}}};
#list temp add {{{min-level} {20} {max-level} {30} {component} {eye of earth}}};
#list temp add {{{min-level} {20} {max-level} {30} {component} {pyrite}}};
#list temp add {{{min-level} {20} {max-level} {30} {component} {pyrite dust}}};
#list temp add {{{min-level} {20} {max-level} {30} {component} {roan's tears}}};
#list temp add {{{min-level} {20} {max-level} {30} {component} {silver shards}}};
#list temp add {{{min-level} {20} {max-level} {30} {component} {tourmaline}}};
#list temp add {{{min-level} {20} {max-level} {30} {component} {tourmaline dust}}};
#list temp add {{{min-level} {21} {max-level} {31} {component} {fragment of ascension}}};
#list temp add {{{min-level} {23} {max-level} {33} {component} {fragment of blasting}}};
#list temp add {{{min-level} {24} {max-level} {34} {component} {fragment of damnation}}};
#list temp add {{{min-level} {25} {max-level} {35} {component} {amethyst}}};
#list temp add {{{min-level} {25} {max-level} {35} {component} {amethyst dust}}};
#list temp add {{{min-level} {25} {max-level} {35} {component} {eye of air}}};
#list temp add {{{min-level} {25} {max-level} {35} {component} {gold shards}}};
#list temp add {{{min-level} {25} {max-level} {35} {component} {happy ed's tears}}};
#list temp add {{{min-level} {25} {max-level} {35} {component} {topaz}}};
#list temp add {{{min-level} {25} {max-level} {35} {component} {topaz dust}}};
#list temp add {{{min-level} {27} {max-level} {37} {component} {fragment of willy}}};
#list temp add {{{min-level} {28} {max-level} {38} {component} {fragment of destruction}}};
#list temp add {{{min-level} {30} {max-level} {40} {component} {fragment of compassion}}};
#list temp add {{{min-level} {32} {max-level} {42} {component} {fragment of knowledge}}};
#list temp add {{{min-level} {33} {max-level} {43} {component} {core of flame}}};
#list temp add {{{min-level} {33} {max-level} {43} {component} {essence of light}}};
#list temp add {{{min-level} {33} {max-level} {43} {component} {heliodor}}};
#list temp add {{{min-level} {33} {max-level} {43} {component} {heliodor dust}}};
#list temp add {{{min-level} {33} {max-level} {43} {component} {hematite}}};
#list temp add {{{min-level} {33} {max-level} {43} {component} {hematite dust}}};
#list temp add {{{min-level} {33} {max-level} {43} {component} {mithril shards}}};
#list temp add {{{min-level} {36} {max-level} {46} {component} {essence of water}}};
#list temp add {{{min-level} {37} {max-level} {47} {component} {essence of shadow}}};
#list temp add {{{min-level} {40} {max-level} {50} {component} {essence of might}}};
#list temp add {{{min-level} {42} {max-level} {52} {component} {core of frost}}};
#list temp add {{{min-level} {42} {max-level} {52} {component} {peridot}}};
#list temp add {{{min-level} {42} {max-level} {52} {component} {peridot dust}}};
#list temp add {{{min-level} {42} {max-level} {52} {component} {titanium shards}}};
#list temp add {{{min-level} {43} {max-level} {53} {component} {essence of rejuvenation}}};
#list temp add {{{min-level} {44} {max-level} {54} {component} {essence of rage}}};
#list temp add {{{min-level} {46} {max-level} {56} {component} {essence of soul}}};
#list temp add {{{min-level} {49} {max-level} {59} {component} {essence of the unseen}}};
#list temp add {{{min-level} {50} {max-level} {60} {component} {core of earth}}};
#list temp add {{{min-level} {50} {max-level} {60} {component} {ebon shards}}};
#list temp add {{{min-level} {52} {max-level} {62} {component} {essence of ascension}}};
#list temp add {{{min-level} {54} {max-level} {64} {component} {essence of blasting}}};
#list temp add {{{min-level} {55} {max-level} {65} {component} {adamantim shards}}};
#list temp add {{{min-level} {55} {max-level} {65} {component} {core of air}}};
#list temp add {{{min-level} {55} {max-level} {65} {component} {essence of damnation}}};
#list temp add {{{min-level} {55} {max-level} {65} {component} {pearl}}};
#list temp add {{{min-level} {55} {max-level} {65} {component} {pearl dust}}};
#list temp add {{{min-level} {58} {max-level} {68} {component} {essence of willy}}};
#list temp add {{{min-level} {59} {max-level} {69} {component} {essence of destruction}}};
#list temp add {{{min-level} {60} {max-level} {70} {component} {ghoti's tears}}};
#list temp add {{{min-level} {60} {max-level} {70} {component} {obsidian shards}}};
#list temp add {{{min-level} {60} {max-level} {70} {component} {opal}}};
#list temp add {{{min-level} {60} {max-level} {70} {component} {opal dust}}};
#list temp add {{{min-level} {61} {max-level} {71} {component} {essence of compassion}}};
#list temp add {{{min-level} {63} {max-level} {73} {component} {essence of knowledge}}};
#list temp add {{{min-level} {65} {max-level} {75} {component} {star of flame}}};
#list temp add {{{min-level} {65} {max-level} {75} {component} {nethernium shards}}};
#list temp add {{{min-level} {66} {max-level} {76} {component} {heart of light}}};
#list temp add {{{min-level} {69} {max-level} {79} {component} {heart of water}}};
#list temp add {{{min-level} {70} {max-level} {80} {component} {heart of shadow}}};
#list temp add {{{min-level} {73} {max-level} {83} {component} {heart of might}}};
#list temp add {{{min-level} {73} {max-level} {83} {component} {diamond}}};
#list temp add {{{min-level} {73} {max-level} {83} {component} {diamond dust}}};
#list temp add {{{min-level} {73} {max-level} {83} {component} {star of frost}}};
#list temp add {{{min-level} {73} {max-level} {83} {component} {shansabyks tears}}};
#list temp add {{{min-level} {73} {max-level} {83} {component} {voidstone shards}}};
#list temp add {{{min-level} {76} {max-level} {86} {component} {heart of rejuvenation}}};
#list temp add {{{min-level} {77} {max-level} {87} {component} {heart of rage}}};
#list temp add {{{min-level} {79} {max-level} {89} {component} {heart of soul}}};
#list temp add {{{min-level} {80} {max-level} {90} {component} {emerald}}};
#list temp add {{{min-level} {80} {max-level} {90} {component} {emerald dust}}};
#list temp add {{{min-level} {80} {max-level} {90} {component} {star of air}}};
#list temp add {{{min-level} {80} {max-level} {90} {component} {star of earth}}};
#list temp add {{{min-level} {80} {max-level} {90} {component} {sapphire dust}}};
#list temp add {{{min-level} {80} {max-level} {90} {component} {sapphire}}};
#list temp add {{{min-level} {80} {max-level} {90} {component} {phasemetal shards}}};
#list temp add {{{min-level} {82} {max-level} {92} {component} {heart of the unseen}}};
#list temp add {{{min-level} {85} {max-level} {95} {component} {heart of ascension}}};
#list temp add {{{min-level} {87} {max-level} {97} {component} {heart of blasting}}};
#list temp add {{{min-level} {88} {max-level} {98} {component} {heart of damnation}}};
#list temp add {{{min-level} {90} {max-level} {100} {component} {chaostone shards}}};
#list temp add {{{min-level} {90} {max-level} {100} {component} {ruby}}};
#list temp add {{{min-level} {91} {max-level} {101} {component} {heart of willy}}};
#list temp add {{{min-level} {92} {max-level} {102} {component} {heart of destruction}}};
#list temp add {{{min-level} {94} {max-level} {104} {component} {heart of compassion}}};
#list temp add {{{min-level} {96} {max-level} {106} {component} {heart of knowledge}}};

#var transmuter[data] $temp;

#class transmuter {close}