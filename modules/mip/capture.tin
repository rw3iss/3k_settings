#class {mipcapture} {open};

#NOP *** Generic idle timeout ***
#var IdleTimeout 3600;

#NOP ***** Set MIP ID Code **********
#VAR {mip} {}
#VAR {mip[Version]} {2.01.1}
#VAR {mip[id]} {}
#LOOP {1} {5} {i} {
	#MATH {temp[digit]} {1d10 - 1};
	#VAR {mip[id]} {$mip[id]$temp[digit]}
}
#UNVAR {temp[digit]}

#NOP ***** Kick Off MIP *************
#DELAY {2} {
	#SEND 3klient $mip[id]~~Tin$mip[Version];
	#SEND 3klient LINEFEED on;
	#SEND 3klient HAA off
}

#NOP ***** Extract Raw Data *********
#ACTION {~{\#K\%$mip[id](.{3})(.{3})(.*)}} {
    #nop #show MIP: %3;
	#VAR {mip[charcount]} {0};
	#VAR {mip[out]} {};
	#VAR {mip[overflow]} {};
	#VAR {mip[source]} {%0};
	#MATH {mip[%3][length]} {%2 - 3};
	#VAR {mip[%3][data]} {%4};
	#REPLACE {mip[%3][data]} {"} {'};
	#PARSE {$mip[%3][data]} {i} {
		#MATH {mip[charcount]} {$mip[charcount] + 1};
		#VAR {mip[delta]} {$mip[%3][length]};
		#IF {"${mip[char2]}${mip[char1]}${i}" == "x7B"} {#MATH {mip[delta]} {$mip[delta] + 3}};
		#IF {"${mip[char2]}${mip[char1]}${i}" == "x7D"} {#MATH {mip[delta]} {$mip[delta] + 3}};
		#IF {"$i" == ";"} {#MATH {mip[delta]} {$mip[delta] + 1}};
		#IF {$mip[charcount] <= $mip[delta]} {
			#VAR {mip[%3][length]} {$mip[delta]};
			#VAR {mip[out]} {${mip[out]}${i}};
		} {
			#REGEXP {$mip[%3][data]} {^{.{$mip[delta]}}{.*}} {#VAR {mip[overflow]} &2} {};
			#BREAK;
		};
		#VAR {mip[char2]} {$mip[char1]};
		#VAR {mip[char1]} {$i}
	};
	#VAR {mip[%3][data]} {$mip[out]};
	.mipProcessFlag {%3} {$mip[out]};
	#IF {"${mip[overflow]}" != ""} {#SHOWME {${mip[overflow]}}};

	#NOP update_status alias defined in personal hpbar trigger;
#nop	update_status;
#nop	_heartbeat;

	#IF {"$mip[echo]" != "on"} {
		#LINE GAG
	}
} {1}

#ALIAS {update_caption} {
	#format {uptime_cap}	{%+8s}	{$session[uptime]};
	#format {reboot_cap}	{%+5s}	{$session[reboot]};
	#format {lag_cap}	{%+4s}	{$session[lag]};
	#math	{idle_hr}	{$idle / 3600};
	#math	{idle_min}	{$idle % 3600 / 60};
	#math	{idle_sec}	{$idle % 60};
	#if	{$idle_hr < 10}	{#var idle_hr  0$idle_hr};
	#if	{$idle_min < 10}{#var idle_min 0$idle_min};
	#if	{$idle_sec < 10}{#var idle_sec 0$idle_sec};
	#format {idle_cap}	{%+4s}	{<268>[<128>$idle_hr<268>:<128>$idle_min<268>:<128>$idle_sec<268>]<088>};
    #nop #SHOWME {<088> <128>$world_cap <068>Uptime: <168>$uptime_cap  <038>Reboot: <138>$reboot_cap  <fca>Lag: <fcb>$lag_cap  <228>Idle: $idle_cap<088>  $areacap<088>} {4}
}

#TICKER {idle} {
	#math {idle} {$idle + 1};
	#if {$idle > $IdleTimeout} {
		#unvar bot;
	};
	update_caption
} {1}

#EVENT {RECEIVED INPUT} {#var idle 0}

#NOP ***** Individual Data Sections *****
#ALIAS {.mipProcessFlag} {
    
	#SWITCH {"%1"} {
#nop		#CASE {"AAA"} {#NOP Sound};
#nop		#CASE {"AAB"} {#NOP Image};
		#CASE {"AAC"} {#NOP Reboot Time;#VAR {session[reboot]} {%2};update_caption};
#nop		#CASE {"AAD"} {#NOP Music};
		#CASE {"AAF"} {#NOP Uptime;#VAR {session[uptime]} {%2};update_caption};
#nop		#CASE {"AAG"} {#NOP AVI movie};
#nop		#CASE {"AAH"} {#NOP Download Media};
#nop		#CASE {"BAA"} {#NOP Special Textstring;#showme {%2} {-2}};
		#CASE {"BAB"} {#NOP 2 Way Communications;.mipProcessBAB {%2}};
		#CASE {"BAC"} {#NOP Special Textstring2};
		#CASE {"BAD"} {#NOP Room Description;.mipProcessBAD {%2}};
		#CASE {"BAE"} {#NOP Mud Lag;#VAR {session[lag]} {%2};update_caption};
#nop		#CASE {"BAF"} {#NOP Send Edit};
		#CASE {"BBA"} {#NOP Guild Point1 Mask;#FORMAT {my[gp1][name]} {%s} {%2}};
		#CASE {"BBB"} {#NOP Guild Point2 Mask;#FORMAT {my[gp2][name]} {%s} {%2}};
		#CASE {"BBC"} {#NOP Hit Point Mask;#FORMAT {my[hp][name]} {%s} {%2}};
		#CASE {"BBD"} {#NOP Spell Point Mask;#FORMAT {my[sp][name]} {%s} {%2}};

		#CASE {"CAA"} {#NOP Chat Messages;.mipProcessCAA {%2}};
#nop		#CASE {"CAP"} {#NOP Window Caption Text;#FORMAT {temp} {%h} {%2};#showme {$temp} {-2}};
#nop		#CASE {"CCF"} {#NOP Send File Line};
#nop		#CASE {"CDF"} {#NOP Send File Begin};
#nop		#CASE {"CEF"} {#NOP Send File End};

		#CASE {"DDD"} {#NOP Room Exits;.mipProcessDDD {%2};#NOP Split at Hex 160 (Non Breaking Space)};
		#CASE {"FFF"} {#NOP Combined Stats Data;.mipProcessFFF {%2}};
		#CASE {"HAA"} {#NOP Room Items};
		#CASE {"HAB"} {#NOP Item Actions;.mipProcessHAB {%2}};
		#DEFAULT {#NOP Every other non-handled flag;#showme <148>UNHANDLED MIP: %0<088>}
	}
}


#ALIAS {.mipProcessBAD} {
    #VAR {room[name]} {%1};
};

#ALIAS {.mipProcessDDD} {
    #var exitStr %1;
    #replace exitStr {~} { };
    #var {room[exits]} {%1};
};

#NOP ***** Combined Stats Data *****
#ALIAS {.mipProcessFFF} {
	#VAR {mip[FFF][flag]} {0};
	#VAR {mip[FFF][toggle]} {0};
	#PARSE {%1} {i} {
		#IF {"$mip[FFF][flag]" == "0"} {
			#VAR {mip[FFF][flag]} {$i};
			#VAR {mip[FFF][$i]} {};
			#VAR {mip[FFF][$i][data]} {};
		} {
			#IF {"$i" == "~"} {
				#IF {"$mip[FFF][toggle]" == "0"} {
					#VAR {mip[FFF][toggle]} {1};
				} {
					.mipProcessFFFSub {$mip[FFF][flag]} {$mip[FFF][${mip[FFF][flag]}][data]};
					#VAR {mip[FFF][flag]} {0};
					#VAR {mip[FFF][toggle]} {0};
				}
			} {
				#VAR {mip[FFF][${mip[FFF][flag]}][data]} {${mip[FFF][${mip[FFF][flag]}][data]}${i}}
			}
		}
	};
	#IF {"$mip[FFF][$mip[FFF][flag]][data]" != ""} {
		.mipProcessFFFSub {$mip[FFF][flag]} {$mip[FFF][${mip[FFF][flag]}][data]}
	}
}

#NOP ***** Separated Stats Data *****
#ALIAS {.mipProcessFFFSub} {
	#SWITCH {"%1"} {
		#CASE {"A"} {#NOP Hit Points;#VAR {my[hp][current]} {%2}};
		#CASE {"B"} {#NOP Hit Points Maximum;#VAR {my[hp][max]} {%2}};
		#CASE {"C"} {#NOP Spell Points;#VAR {my[sp][current]} {%2}};
		#CASE {"D"} {#NOP Spell Points Maximum;#VAR {my[sp][max]} {%2}};
		#CASE {"E"} {#NOP Guild Points1;#VAR {my[gp1][current]} {%2}};
		#CASE {"F"} {#NOP Guild Points1 Maximum;#VAR {my[gp1][max]} {%2}};
		#CASE {"G"} {#NOP Guild Points2;#VAR {my[gp2][current]} {%2}};
		#CASE {"H"} {#NOP Guild Points2 Maximum;#VAR {my[gp2][max]} {%2}};
		#CASE {"I"} {#NOP Primary Guild Line;.mipProcessGline {1} {%2}};
		#CASE {"J"} {#NOP Secondary Guild Line;.mipProcessGline {2} {%2}};
		#CASE {"K"} {#NOP Mob Fighting;.mipProcessFFFK {%2}};
		#CASE {"L"} {#NOP Mob Health;#VAR {enemy[hp]} {%2}};
		#CASE {"M"} {#NOP Mob Image File};
		#CASE {"N"} {#NOP Combat Round Counter;#VAR {mip[round]} {%2}};
		#DEFAULT {#NOP Every other non-handled flag}
	}
}

#NOP ***** Combat Mob Name *****;
#ALIAS {.mipProcessFFFK} {
	#IF {"%1" != ""} {
		#VAR {enemy} {};
		#VAR {enemy[name]} {%1};
	} {
		#VAR {enemy[hp]} {}
	}
}

#NOP ***** Guild Stats Line 1/2 *****
#ALIAS {.mipProcessGline} {
	#VAR {mip[gline][%1]} {%2};
	#VAR {temp} {};

	#NOP GUILD SPECIFIC GLINE PROCESSING;
	#IF {"%2" != ""} {
		#SWITCH {"$guild"} {
			#CASE {"changeling"}	{.mipProcessGlineChangeling {%1}};
			#CASE {"elemental"}	{.mipProcessGlineElemental {%1}};
			#CASE {"juggernaut"}	{.mipProcessGlineJuggernaut {%1}};
			#CASE {"necromancer"}	{.mipProcessGlineNecromancer {%1}};
			#CASE {"bard"}		{.mipProcessGlineBard {%1}};
		}
	}
}

#ALIAS {.mipProcessGlineChangeling} {
	#IF {%1 == 1} {
		#REGEX {$mip[gline][1]} {Chaos Flux: %d/%d} {
			#VAR {my[relinquish][current]}	{&1};
			#VAR {my[relinquish][reset]}	{&2}
		};
		#REGEX {$mip[gline][1]} {{Density|Homeostasis|Mitosis|Morphogenesis|Resilience}: %d.%d\%} {
			#VAR {my[skill][name]}		{&1};
			#VAR {my[skill][current]}	{&2.&3}
		};
		#REGEX {$mip[gline][1]}	{\[{FF|IL}\(%d\): %d.%d\%\]>  \[%D\]} {
			#VAR {my[ff][current]}		{&3.&4};
			#VAR {my[form]}			{&5}
		}
	}; #ELSEIF {%1 == 2} {
		#REGEX {$mip[gline][2]}	{\[Bioplasts: %d\]} {#VAR {my[bioplasts]}	{&1}}
	}; #ELSE {
		#ECHO {<171> Invalid Gline Number <088>}
	}
}

#ALIAS {.mipProcessGlineElemental} {
	#IF {%1 == 1} {
		#REGEX {Emit> : <%w%d>}			{#VAR {my[emit][level]}		{&2}};
		#REGEX {Equipollent}			{#VAR {my[equip]}		{on}}
							{#VAR {my[equip]}		{off}};
		#REGEX {Form>: <c%w>\(<r%d>\)}		{
			#VAR {my[form][type]}		{&1};
			#VAR {my[form][size]}		{&2}
		};
		#REGEX {Rating>: <r%d>}			{#VAR {my[rating]}		{&1}}
	}; #ELSEIF {%1 == 2} {
		#REGEX {Stones/Waves/Shrouds>: <%w%d>/<%w%d>/<%w%d>\(%d\%\)}
			#VAR {my[blasts]		{&2};
			#VAR {my[waves]}		{&4};
			#VAR {my[shrouds]}		{&6};
			#VAR {my[reset]}		{&7}
		};
		#REGEX {G2N: <%w%d>}			{#VAR {my[g2n]}			{&2}}
	}; #ELSE {
		#ECHO {<171> Invalid Gline Number <088>}
	}
}

#ALIAS {.mipProcessGlineJuggernaut} {
	#IF {%1 == 1} {
		#REGEX {$mip[gline][1]} {Ammo:\[%d/%d/%d/%d/%d\] <yGxp: %d.%d\%> Hits: \[%d\] <cCoffin: %d/%d} {
			#VAR {ammo[1]}			{&1};
			#VAR {ammo[2]}			{&2};
			#VAR {ammo[3]}			{&3};
			#VAR {ammo[4]}			{&4};
			#VAR {ammo[5]}			{&5};
			#VAR {gxp}			{&6.&7};
			#VAR {hits}			{&8};
			#VAR {corpses[coffin]}		{&9};
			#VAR {corpses[coffinsize]}	{&10}
		}
	}; #ELSEIF {%1 == 2} {
		#REGEX {$mip[gline][2]} {Nukes: \[%d/%d\]> Reset: \[%d\%\]} {
			#VAR {nukes}		{&1};
			#VAR {nukes_max}	{&2};
			#VAR {reset}		{&3};
		}
	}; #ELSE {
		#ECHO {<171> Invalid Gline Number <088>}
	}
}

#ALIAS {.mipProcessGlineNecromancer} {
	#IF {%1 == 1} {
		#REGEX {$mip[gline][1]} {C:%d}		{#VAR {corpses[inventory]}	{&1}};
		#REGEX {$mip[gline][1]} {Worth:%d}	{#VAR {my[worth]}		{&1}};
		#REGEX {$mip[gline][1]} {Tport:%d/%d}	{
			#VAR {my[ports][current]}	{&1};
			#VAR {my[ports][max]}		{&2}
		};
		#REGEX {$mip[gline][1]} {Sprk:%d/%d}	{
			#VAR {my[sparks][current]}	{&1};
			#VAR {my[sparks][max]}		{&2};
		};
		#REGEX {$mip[gline][1]} {Prot:%wX}	{#VAR {my[prot]}		{&1}};
		#REGEX {$mip[gline][1]} {Circle:%d}	{#VAR {my[gxp]}			{&1}};
	}; #ELSEIF {%1 == 2} {
		#REGEX {$mip[gline][2]}	{Undead:%w}	{#VAR {my[undead]}		{&1}};
		#REGEX {$mip[gline][2]}	{SPf:%d/%d}	{
			#VAR {my[sp][fuse][current]}	{&1};
			#VAR {my[sp][fuse][max]}	{&2}
		}
	}; #ELSE {
		#ECHO {<171> Invalid Gline Number <088>}
	}
}

#ALIAS {.mipProcessGlineBard} {
	#IF {%1 == 1} {
		#nop Protection Info
		#REGEX {$mip[gline][1]} { PE:%d}	{#VAR {my[defs][pe]}		{&1}}   {#var {my[defs][pe]}    {0}};
		#REGEX {$mip[gline][1]} { PN:%d}	{#VAR {my[defs][pn]}		{&1}}   {#var {my[defs][pn]}    {0}};
		#REGEX {$mip[gline][1]} { PG:%d}	{#VAR {my[defs][pg]}		{&1}}   {#var {my[defs][pg]}    {0}};
		#REGEX {$mip[gline][1]} { PF:%d}	{#VAR {my[defs][pf]}		{&1}}   {#var {my[defs][pf]}    {0}};
		#REGEX {$mip[gline][1]} { PH:%d}	{#VAR {my[defs][ph]}		{&1}}   {#var {my[defs][ph]}    {0}};
		#REGEX {$mip[gline][1]} { HS:%d}	{#VAR {my[defs][hs]}		{&1}}   {#var {my[defs][hs]}    {0}};
		#REGEX {$mip[gline][1]} { O:%d}		{#VAR {my[defs][o]}		{&1}}	{#var {my[defs][o]}     {0}};
		#REGEX {$mip[gline][1]} { AG:%d}	{#VAR {my[defs][ag]}		{&1}}	{#var {my[defs][ag]}	{0}};
		#REGEX {$mip[gline][1]} { B}		{#VAR {my[defs][blink]}		 {1}}	{#var {my[defs][blink]} {0}};
		#REGEX {$mip[gline][1]} { AB}		{#VAR {my[defs][ab]}		 {1}}	{#var {my[defs][ab]}    {0}};
		#REGEX {$mip[gline][1]} { PE:%d}	{#VAR {my[defs][pe]}		{&1}}   {#var {my[defs][pe]}    {0}};

	}; #ELSEIF {%1 == 2} {
		#nop Smile, GXP, Song Performing, Rounds left
		#REGEX {$mip[gline][2]} { S:%d}		{#VAR {my[smile]}		{&1}};
		#REGEX {$mip[gline][2]} { NGL: %d%}	{#VAR {my[g2nl]}		{&1}};
		#REGEX {$mip[gline][2]} { S: %1% %2: %3 NGL:}	{#VAR {my[song][&2]}	{&3}};
	
	}; #ELSE {
		#ECHO {<171> Invalid Gline Number <088>}
	}
}


#NOP ***** 2 Way Communication (Tell/Emote) *****
#ALIAS {.mipProcessBAB} {
	#REGEX {%1} {{(.*)\~(.*)\~(.*)}} {
		#IF {"&3" != "0"} {
			#var mip[comm][data]	{&4};
			#var mip[comm][source]	{&3};
			#var mip[comm][line]	{Tell};
			#var mip[comm][command]	{tell $mip[comm][source]};
			#format {timestamp} {%t} {<108>[<268>%H<108>:<268>%M<108>]<088> };
			#format {datestamp} {%t} {%Y-%m-%d.log};
			#format {timestamp_save} {%t} {[%H:%M] };
			#IF {"&2" == "x"} {
				#NOP Message to another player;
				#var mip[comm][twoway] {to};
				#line log {logs/$datestamp} {$timestamp_save\};
				#line log {logs/$datestamp} {<ead>To &3<088>: &4}
			} {
				#NOP Message from another player;
				#var mip[comm][twoway] {from};
					#line log {logs/$datestamp} {$timestamp_save\};
					#line log {logs/$datestamp} {<ead>&3<088>: &4};
					#bell;
			}
		}
	}
}

#NOP ***** Broadcast Communication (Chat/Shout) *****
#ALIAS {.mipProcessCAA} {
	#REGEX {%1} {{(.*)\~(.*)\~(.*)\~(.*)}} {
		#var {mip[enomm]} {};
		#var {mip[comm][command]}	{&2};
		#var {mip[comm][line]}		{&3};
		#var {mip[comm][source]}	{&4};
		#var {mip[comm][data]}		{&5};

		#format {timestamp} {%t} {<108>[<268>%H<108>:<268>%M<108>]<088> };
		#format {datestamp} {%t} {%Y-%m-%d.log};

		#NOP Ansify lines;
		#var {commcol} {<178>};
		#switch {"$mip[comm][line]"} {
			#case {"ADMIN"}		{#var {commcol} {<158>}};
			#case {"Auction"}	{#var {commcol} {<cba>}};
			#case {"Bear"}		{#var {commcol} {<168>}};
			#case {"Bloodname"}	{#var {commcol} {<138>}};
			#case {"Clan Spol"}	{#var {commcol} {<ACF><fff>}};
			#case {"Com"}		{#var {commcol} {<128>}};
			#case {"Council"}	{#var {commcol} {<108>}};
			#case {"Eternal Main"}	{#var {commcol} {<168>}};
			#case {"Events"}	{#var {commcol} {<168>}};
			#case {"Falcon"}	{#var {commcol} {<128>}};
			#case {"High Mortal"}	{#var {commcol} {<aff>}};
			#case {"JuggAnnounce"}	{#var {commcol} {<118>}};
			#case {"JuggMissiles"}	{#var {commcol} {<118>}};
			#case {"JuggNewbie"}	{#var {commcol} {<258>}};
			#case {"Cult Game"}	{#var {commcol} {<258>}};
			#case {"Main"}		{#var {commcol} {<118>}};
			#case {"Newbie"}	{#var {commcol} {<138>}};
			#case {"Party"}		{#var {commcol} {<128>}};
			#case {"Shout"}		{#var {commcol} {<aaa>}};
			#case {"Whine"}		{#var {commcol} {<118>}};
			#case {"Wolf"}		{#var {commcol} {<228>}};
			#default		{#var {commcol} {<178>}};
		};
		

		#var {mip[comm][cdata]} {$mip[comm][data]};
		#replace {mip[comm][cdata]} {:} {:<099>};
		#replace {mip[comm][cdata]} {]} {]<099>};
		#var {mip[comm][cdata]} {$commcol$mip[comm][cdata]<099>};

		#line log {logs/$datestamp} {$timestamp\};
		#line log {logs/$datestamp} {$mip[comm][cdata]};

	}
}

#NOP ***** Room Nouns Handling *****
#ALIAS {.mipProcessHAB} {
	#REGEX {%1} {{(.*)\~(.*)\~(.*)\~(.*)}} {
		#list {nouns} {fin} {&3} {noun_index};
		#if {$noun_index == 0} {
			#list {nouns} {add} {&3};
			#if {"$autosearch" == "on"} {
				exa &3;
				search &3
			}
		}
	}
}
#list {nouns} {create}

#NOP ***** Guild Stats Line Colour Handling *****
#FUNCTION {fMipColourConv} {
	#VAR {result} {%1};
	#REPLACE {result} {>} {<099>};
	#REPLACE {result} {<y} {<839>};
	#REPLACE {result} {<r} {<819>};
	#REPLACE {result} {<b} {<849>};
	#REPLACE {result} {<g} {<829>};
	#REPLACE {result} {<c} {<869>};
	#REPLACE {result} {<v} {<859>};
	#REPLACE {result} {<s} {<279>};
}

#class {mipcapture} {close};
