#class {miproom} {open};



#ALIAS {.mipProcessBAD} {
    #VAR {room[name]} {%1};
};

#ALIAS {.mipProcessDDD} {
    #var exitStr %1;
    #replace exitStr {~} { };
    #var {room[exits]} {%1};
};

#NOP ***** Room Nouns Handling *****
#ALIAS {.mipProcessHAB} {
	#REGEX {%1} {{(.*)\~(.*)\~(.*)\~(.*)}} {
		#list {nouns} {fin} {&3} {noun_index};
		#if {$noun_index == 0} {
			#list {nouns} {add} {&3};
			#if {"$autosearch" == "on"} {
				exa &3;
				search &3
			}
		}
	}
}
#list {nouns} {create};



#alias {draw_mip_room} {

    #var roomTop 40;
    #var roomLeft 105;
    #var roomWidth 80;
    #var roomHeight 20;
    #math roomBottom {$roomTop + $roomHeight};
    #math roomRight {$roomLeft + $roomWidth}; 
    
    #var nounStr {};
    #foreach {*nouns[%*]} {idx} {
        #var noun $nouns[$idx];
        #var nounStr {$nounStr\n $noun};
    };
    
    #var roomName ${room[name]};

    #var roomNameStr {<ffa>${roomName}};

    #var nounStr {<ade>${nounStr}};

    #var roomStr {${roomNameStr}\n${nounStr}\n\n <afe>${exitStr}};

    #draw {<dda>} {box} $roomTop $roomLeft $roomBottom $roomRight { ${roomStr} };

};

#alias {sr} {
    #foreach {*nouns[%*]} {idx} {
        #var noun $nouns[$idx];
        ex $noun;
    };
};

#ticker draw_room {
    draw_mip_room;
} {2};


#nop To clean/customise positioning...;
#split {0} {4} {0} {-100};


#class {miproom} {close};